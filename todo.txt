//TODO: current plans:
// allow interacting with doors in CanvasModeEntities as long as a controllable entity is near it (toggle isOpen or play locked sound)
// add motd (and maybe more?) to login screen

//TODO: when the web client porting is done:
// Add an "fileRenamed" event and a listener that adjusts token imagePath and audioPath properties to server
// "Area" module (you can define areas, maybe using the drawing system, that can influence stuff, 
//               first idea: "no weather/indoor" areas where the WeatherRenderer does not spawn particles)

//TODO: Current Plans:
// support sending selected entities of other types
// Doppelklick um Dinge zu Ã¶ffnen
// create real "import" command line functionality on server (+ other commands?)

//TODO: dice/template/scripting rework
//    not as important: (using a string property as part of the expression (cheap solution would be replacing before parsing, but that can be done better...))
//    storing a evaluated expression and reusing that (multiple times) as part of other expressions (so not just the resulting value, but also the full "result" object)
//    better display of eval results (calculations for dice sides/count/... are not show at all currently)

//TODO: Current Priorities:
// make pf character sheet more complete (atleast: movementrates, ...) AND replace with custom no copyright sheet
// journal: entity with a single string (parsed by layoutengine), that can be shown/viewed - needs atleast text and image (based on id) support
// more keyboard shortcuts (camera moving, ...)
// Add optional "attachment" macros

//TODO: And the completely insane next plan:
//    Rework the entity system (the current one always needs to transmit and iterate all for everything -> performance degradation with many maps)
//      Maps, Actors and Attachments remain the only "global" entities
//      Tokens, Walls, Drawings, ... are stored in the maps (not as properties, a sepparate system that can allow gradual loading of map content)
//
// Convert ALL entities to be FULLY data defined/driven
//    Add remaining data defined stuff: cascading deletes
//    Verify entity type on entitymanager add / other locations
// 
// split attachments into more logical separate things:
//    items
//    features
//    spells
//    journal entries

//TODO: Nice to haves:
// more "Effects" for use with the effect command (-> i.e. attack animations and magic)
// one sided walls ?
// Script support (server side, how would I keep them "safe", maybe just keep it at modules)
// language support
// a "map" function for an actual map somehow?

//TODO: future (not sure about how to implement it technically)
// implement a "local token copy" of actor system (one global actor, but changes made are stored per token not in the actor? needs to work differently on a technical level)
// -> allows for creating an in tool "monster manual" that can easily spawn in premade tokens but keep temporary modifier changes per token

//TODO: Technical:
// improve entity management: async saving has fixed the biggest delay problem for now, but maybe there is a better way than resaving all entities on a single prop change?
// improve access management: Currently all tokens and walls are synched even for inaccessible maps, And maps require a forced sync for players (that may be a good thing?)
